# Generated by Django 5.1 on 2025-06-27 20:37

from django.db import migrations


def make_club_admins_members(apps, schema_editor):
    """Ensure all club admins are also club members"""
    Club = apps.get_model('users', 'Club')
    
    for club in Club.objects.all():
        # Get all admin IDs for this club
        admin_ids = list(club.admins.values_list('id', flat=True))
        
        # Add all admins as members (this is safe, won't create duplicates)
        for admin_id in admin_ids:
            club.members.add(admin_id)


def reverse_make_club_admins_members(apps, schema_editor):
    """Reverse migration - no action needed as we don't want to remove members"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0014_rename_league_state_schedulingnotification_division_state_and_more'),
    ]

    operations = [
        migrations.RunPython(make_club_admins_members, reverse_make_club_admins_members),
    ]
